# -*- coding: utf-8 -*-
"""Home.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1p7LcBUkfRHLD_j-UoaPHRLsVok4cp-Nv
"""



# pages/01_Home.py
import streamlit as st
import pandas as pd

# It's good practice to cache data loading for performance in Streamlit apps,
# especially if the data doesn't change frequently.
@st.cache_data
def load_data():
    """
    Loads and preprocesses the accident data.
    Using st.cache_data ensures the data is loaded only once,
    improving app performance.
    """
    try:
        df = pd.read_csv('assets/data_fusionnee.csv')
        df['MS_ACCDN'] = df['MS_ACCDN'].astype(int)
        df['Gravité'] = df['GRAVITE'].apply(lambda x: 'Grave' if x == 'Mortel ou grave' else 'Autre')
        return df
    except FileNotFoundError:
        st.error("Error: 'assets/data_fusionnee.csv' not found. Please ensure the file is in the 'assets' directory.")
        st.stop() # Stop the app execution if data isn't found
    except Exception as e:
        st.error(f"An error occurred while loading data: {e}")
        st.stop()

df = load_data()

def get_kpis(data):
    """
    Calculates key performance indicators (KPIs) from the accident data.
    """
    total_accidents = len(data)
    severe_accidents = len(data[data['Gravité'] == 'Grave'])

    surface_mode_code = data['CD_ETAT_SURFC'].mode()
    if not surface_mode_code.empty:
        surface_code = surface_mode_code.iloc[0]
        surface_labels = {
            11: "Sec", 12: "Mouillé", 13: "Aquaplanage", 14: "Sable/Gravier",
            15: "Neige fondante", 16: "Neige", 17: "Neige durcie",
            18: "Glacé", 19: "Boueux", 99: "Autre"
        }
        surface_label = surface_labels.get(surface_code, "Inconnu")
    else:
        surface_label = "Inconnu"

    return total_accidents, severe_accidents, surface_label

# Calculate KPIs once when the script runs
total_acc, severe_acc, common_surface = get_kpis(df)

# --- Streamlit App Layout ---

st.title("Quebec Road Accidents Dashboard")

st.write(
    """
    This dashboard presents various visualizations of road accidents in Quebec
    based on data related to severity, user types, weather, road surface conditions,
    lighting, and time patterns.
    """
)

st.markdown("---") # Add a horizontal line for visual separation

st.header("Key Statistics")

# Using st.columns to create a layout for the KPI cards
col1, col2, col3 = st.columns(3)

with col1:
    st.metric(label="Total Accidents", value=f"{total_acc:,}")

with col2:
    st.metric(label="Severe Accidents", value=f"{severe_acc:,}")

with col3:
    st.metric(label="Most Common Surface", value=common_surface)

st.markdown("---")
st.info("Navigate to other pages using the sidebar on the left to explore more visualizations.")